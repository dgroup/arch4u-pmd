<?xml version="1.0"?>
<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2019-2022 Yurii Dubinka
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"),
  ~ to deal in the Software without restriction, including without limitation
  ~ the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom
  ~ the Software is  furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included
  ~ in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
  ~ ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
  ~ OR OTHER DEALINGS IN THE SOFTWARE.
  -->

<ruleset name="arch4u-api-rest"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
  <description>arch4u rules related to rest api</description>
  <rule name="UseExistingMediaTypeConstant"
        since="0.1.0"
        language="java"
        externalInfoUrl="https://github.com/dgroup/arch4u-pmd/discussions/43"
        message="Use existing MediaType constant instead of string literal: https://github.com/dgroup/arch4u-pmd/discussions/43"
        class="io.github.dgroup.arch4u.pmd.UseExistingConstant">
    <description>
      Avoid using hardcoded String constants.
      See discussion about implementation tips/tricks on Github: https://github.com/dgroup/arch4u-pmd/discussions/43
    </description>
    <priority>3</priority>
    <properties>
      <property name="regexPattern" description="Regular expression of prohibited string"
                value="(^|\s)(application\/(json|xml|atom\+xml|x-www-form-urlencoded|octet-stream|svg\+xml|xhtml\+xml)|(multipart\/form-data)|(text\/(html|xml|plain)))(\s|$)"/>
    </properties>
    <example>
      <![CDATA[
      class Foo {
          String type = "application/json";
      }
      ]]>
    </example>
  </rule>

  <rule name="UseOpenApiInRestEndpoints"
        since="0.1.0"
        language="java"
        externalInfoUrl="https://github.com/dgroup/arch4u-pmd/discussions/73"
        message="Public method(s) in REST endpoint(s) should have @Override annotation: https://github.com/dgroup/arch4u-pmd/discussions/73"
        class="io.github.dgroup.arch4u.pmd.WrongRestMethodSignature">
    <description>
      Each REST endpoint method should be public and has @Override annotation
      See discussion about implementation tips/tricks on Github: https://github.com/dgroup/arch4u-pmd/discussions/TBD
    </description>
    <priority>3</priority>
    <properties>
      <property name="restAnnotations" type="List[String]" delimiter="|"
                description="List of the REST endpoint method annotations"
                value="org.springframework.web.bind.annotation.GetMapping
|org.springframework.web.bind.annotation.DeleteMapping
|org.springframework.web.bind.annotation.PatchMapping
|org.springframework.web.bind.annotation.PostMapping
|org.springframework.web.bind.annotation.PutMapping
|org.springframework.web.bind.annotation.RequestMapping"/>
    </properties>
    <example>
      <![CDATA[
      import org.springframework.web.bind.annotation.RestController;
      import org.springframework.web.bind.annotation.GetMapping;

      @RestController
      public class MyTypicalRestController implements TypicalRestApiGeneratedByOpenApi {
         @Override
         public String get() {
            return null;
         }
      }
      ]]>
    </example>
  </rule>

</ruleset>
