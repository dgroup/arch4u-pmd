<?xml version="1.0"?>
<ruleset name="arch4u-error-handling"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
  <description>arch4u rules related to error handling</description>
  <rule name="NoMandatoryConstructorInExceptionClass"
        since="0.2.0"
        language="java"
        message="Exception class must have at least one constructor with signature `public Ctor(Throwable, String, Object...)` or `public Ctor(String, Object...)`: https://github.com/dgroup/arch4u-pmd/discussions/31"
        class="net.sourceforge.pmd.lang.rule.XPathRule">
    <description>
      Exception class must have at least one constructor with signature
      `public Ctor(Throwable, String, Object...)` or `public Ctor(String, Object...)`.
      Read more: https://github.com/dgroup/arch4u-pmd/discussions/31
    </description>
    <priority>3</priority>
    <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
        <value>
          <![CDATA[
          //ClassOrInterfaceDeclaration
          [pmd-java:typeIs('java.lang.Exception')] (: extends Exception class :)
          [not(
          ./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[@Public=true()]
          /FormalParameters[
              (: Ctor(Throwable, String, Object...) :)
              (./FormalParameter[1]/Type/ReferenceType/ClassOrInterfaceType[pmd-java:typeIsExactly('java.lang.Throwable')]
              and
              ./FormalParameter[2]/Type/ReferenceType/ClassOrInterfaceType[pmd-java:typeIs('java.lang.String')]
              and
              ./FormalParameter[3][@Varargs=true()]/Type/ReferenceType/ClassOrInterfaceType[pmd-java:typeIsExactly('java.lang.Object')])
              or
              (: Ctor(String, Object...) :)
              (./FormalParameter[1]/Type/ReferenceType/ClassOrInterfaceType[pmd-java:typeIs('java.lang.String')]
              and
              ./FormalParameter[2][@Varargs=true()]/Type/ReferenceType/ClassOrInterfaceType[pmd-java:typeIsExactly('java.lang.Object')])]
          )]
          ]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
          class MyException extends Exception {
              public MyException(String pattern, Object... args) {}

              public MyException(Throwable cause, String pattern, Object... args) {}
          }
          ]]>
    </example>
  </rule>

  <rule name="UseExistingConstant"
        since="0.4.0"
        language="java"
        message="Use existing MediaType constant instead of string literal: https://github.com/dgroup/arch4u-pmd/discussions/43"
        class="io.github.dgroup.arch4u.pmd.UseExistingConstant">
    <description>
      Avoid using hardcoded String constants.
      See discussion about implementation tips/tricks on Github: https://github.com/dgroup/arch4u-pmd/discussions/43
    </description>
    <priority>3</priority>
    <properties>
      <property name="regexPattern" description="Regular expression of prohibited string"
                value="(^|\s)(application\/(json|xml|atom\+xml|x-www-form-urlencoded|octet-stream|svg\+xml|xhtml\+xml)|(multipart\/form-data)|(text\/(html|xml|plain)))(\s|$)"/>
    </properties>
    <example>
      <![CDATA[
      class Foo {
          String type = "application/json";
      }
      ]]>
    </example>
  </rule>
</ruleset>
