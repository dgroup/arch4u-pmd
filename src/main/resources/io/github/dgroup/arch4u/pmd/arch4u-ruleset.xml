<ruleset name="Custom Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/3.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/3.0.0 https://pmd.sourceforge.io/ruleset_3_0_0.xsd">
  <description>All arch4u rules</description>

  <!-- Rules related to JSON processing -->
  <rule name="AvoidUsingObjectMapperAsALocalVariable"
        since="0.1.0"
        language="java"
        externalInfoUrl="https://github.com/dgroup/arch4u-pmd/discussions/30"
        message="ObjectMapper is better to have as a field rather than a local variable: https://github.com/dgroup/arch4u-pmd/discussions/30"
        class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">

    <description>
      ObjectMapper is better to have as a field rather than a local variable due to performance reasons.
      It is allowed to be declared in fields, constructors, and initialization blocks.
      Read more: https://github.com/dgroup/arch4u-pmd/discussions/30
    </description>

    <priority>3</priority>

    <properties>
      <property name="annotations" type="List[String]"
                description="Full name of the method annotations in which it's allowed to use ObjectMapper as a field"
                value="javax.annotation.PostConstruct|org.springframework.context.annotation.Bean"/>

      <property name="xpath">
        <value>
          <![CDATA[
                //
                (Type/ReferenceType | AllocationExpression)/ClassType
                [pmd-java:typeIs('com.fasterxml.jackson.databind.ObjectMapper')]
                [not(
                    ancestor::FieldDeclaration
                    or ancestor::Initializer
                    or ancestor::ConstructorDeclaration
                    or ancestor::MethodDeclaration
                    [preceding-sibling::Annotation
                        [some $annotation in $annotations satisfies pmd-java:typeIs($annotation)]
                    ]
                )]
                /..
                ]]>
        </value>
      </property>
    </properties>

  </rule>


  <!-- Rules related to application monitoring -->
  <rule name="UseConstantAsMetricName"
        since="0.1.0"
        language="java"
        externalInfoUrl="https://github.com/dgroup/arch4u-pmd/discussions/75"
        message="Use constant for metric name instead of hardcoded string literals: https://github.com/dgroup/arch4u-pmd/discussions/75"
        class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
    <description>
      The monitoring metric name should be provided into annotation @Timed by constant, not a hardcoded string.
    </description>
    <priority>3</priority>
    <properties>
      <property name="metricAnnotations" type="List[String]"
                description="List of the metric annotations"
                value="io.micrometer.core.annotation.Timed"/>
      <property name="xpath">
        <value>
          <![CDATA[
          //Annotation[some $annotation in $metricAnnotations satisfies pmd-java:typeIsExactly($annotation)]
          [
          SingleMemberAnnotation/MemberValue/PrimaryExpression/PrimaryPrefix/Literal
          or
          NormalAnnotation/MemberValuePairs/MemberValuePair[@Image='value']/MemberValue/PrimaryExpression/PrimaryPrefix/Literal
          ]
          ]]>
        </value>
      </property>
    </properties>
  </rule>

  <!-- Rules related to error handling -->
  <rule name="NoMandatoryConstructorInExceptionClass"
        since="0.1.0"
        language="java"
        externalInfoUrl="https://github.com/dgroup/arch4u-pmd/discussions/31"
        message="Exception class must have at least one constructor with signature `public Ctor(Throwable, String, Object...)` or `public Ctor(String, Object...)`: https://github.com/dgroup/arch4u-pmd/discussions/31"
        class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
    <description>
      Exception class must have at least one constructor with signature
      `public Ctor(Throwable, String, Object...)` or `public Ctor(String, Object...)`.
    </description>
    <priority>3</priority>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
          //ClassOrInterfaceDeclaration
          [pmd-java:typeIs('java.lang.Exception')]
          [not(
          ./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[@Public=true()]
          /FormalParameters[
              (./FormalParameter[1]/Type/ReferenceType/ClassType[pmd-java:typeIsExactly('java.lang.Throwable')]
              and
              ./FormalParameter[2]/Type/ReferenceType/ClassType[pmd-java:typeIs('java.lang.String')]
              and
              ./FormalParameter[3][@Varargs=true()]/Type/ReferenceType/ClassType[pmd-java:typeIsExactly('java.lang.Object')])
              or
              (./FormalParameter[1]/Type/ReferenceType/ClassType[pmd-java:typeIs('java.lang.String')]
              and
              ./FormalParameter[2][@Varargs=true()]/Type/ReferenceType/ClassType[pmd-java:typeIsExactly('java.lang.Object')])]
          )]
          ]]>
        </value>
      </property>
    </properties>
  </rule>

  <!-- Third-party rules -->
  <rule ref="category/java/bestpractices.xml">
    <exclude
            name="GuardLogStatement"/> <!-- @todo #/DEV GuardLogStatement: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude name="UnusedPrivateMethod"/>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod">
    <properties>
      <property name="violationSuppressXPath"
                value="//ClassOrInterfaceDeclaration//Annotation/ClassType[@SimpleName='PostConstruct']"/>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage">
    <properties>
      <property name="violationSuppressXPath" value=".[ends-with(@Image,'assertEquals')]"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml">
    <exclude name="AtLeastOneConstructor"/>
    <exclude name="ShortClassName"/>
    <exclude
            name="OnlyOneReturn"/> <!-- @todo #/DEV OnlyOneReturn: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude name="LongVariable"/>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortClassName">
    <properties>
      <property name="minimum" value="3"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LongVariable">
    <properties>
      <property name="minimum" value="25"/>
    </properties>
  </rule>
  <rule ref="category/java/design.xml">
    <exclude
            name="LawOfDemeter"/>  <!-- @todo #/DEV LawOfDemeter: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude
            name="UseObjectForClearerAPI"/> <!-- @todo #/DEV UseObjectForClearerAPI: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude
            name="AvoidCatchingGenericException"/> <!-- @todo #/DEV AvoidCatchingGenericException: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude
            name="SignatureDeclareThrowsException"/> <!-- @todo #/DEV SignatureDeclareThrowsException: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude
            name="ExcessiveImports"/> <!-- @todo #/DEV ExcessiveImports: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude
            name="LoosePackageCoupling"/> <!-- @todo #/DEV LoosePackageCoupling: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude name="UseUtilityClass"/>
    <exclude name="ImmutableField"/>
  </rule>
  <rule ref="category/java/design.xml/CouplingBetweenObjects">
    <properties>
      <property name="threshold" value="40"/>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/TooManyMethods">
    <properties>
      <property name="maxmethods" value="20"/>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/TooManyFields">
    <properties>
      <property name="maxfields" value="25"/>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/UseUtilityClass">
    <properties>
      <property name="violationSuppressXPath"
                value="//ClassDeclaration/ModifierList/Annotation[@SimpleName='SpringBootApplication']"/>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/ImmutableField">
    <properties>
      <property name="violationSuppressXPath"
                value="//ClassDeclaration/ModifierList/Annotation[@SimpleName='Entity' or @SimpleName='MappedSuperclass']"/>
    </properties>
  </rule>
  <rule ref="category/java/documentation.xml">
    <exclude name="CommentSize"/>
    <exclude name="CommentRequired"/>
  </rule>
  <rule ref="category/java/documentation.xml/CommentRequired">
    <properties>
      <property name="fieldCommentRequirement" value="Ignored"/>
      <property name="publicMethodCommentRequirement" value="Ignored"/>
      <property name="protectedMethodCommentRequirement" value="Ignored"/>
    </properties>
  </rule>
  <rule ref="category/java/multithreading.xml">
    <exclude
            name="UseConcurrentHashMap"/> <!-- @todo #/DEV UseConcurrentHashMap: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
  </rule>
  <rule ref="category/java/performance.xml"/>
  <rule ref="category/java/security.xml"/>
  <rule ref="category/java/errorprone.xml">
    <exclude
            name="AvoidDuplicateLiterals"/> <!-- @todo #/DEV AvoidDuplicateLiterals: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
    <exclude
            name="MissingSerialVersionUID"/> <!-- @todo #/DEV MissingSerialVersionUID: deep investigation is needed regarding purpose and goal of this this rule. Potentially improvement is needed. -->
  </rule>
</ruleset>
