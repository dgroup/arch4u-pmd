<?xml version="1.0"?>

<ruleset name="arch4u-template"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

  <description>arch4u template rules that you may use for your own/private use-cases</description>

  <rule name="AvoidProhibitedClasses"
        since="0.1.0"
        language="java"
        message="The {0} class is prohibited to use."
        class="net.sourceforge.pmd.lang.rule.XPathRule">
    <description>
      Avoid to use prohibited classes.
      See discussion about tips/tricks implementation on Github:
      https://github.com/pmd/pmd/discussions/3705
    </description>
    <priority>3</priority>
    <properties>
      <property name="fullName" type="List[String]" delimiter="|"
                description="Full name of prohibited classes"
                value="org.apache.commons.codec.CharEncoding|org.apache.commons.lang3.CharEncoding|org.apache.commons.lang.CharEncoding|org.apache.log4j.Logger"/>
      <property name="shortName" type="List[String]" delimiter="|"
                description="Short name of prohibited classes"
                value="CharEncoding|Logger"/>
      <property name="version" value="2.0"/>
      <property name="xpath">
        <value>
          <![CDATA[
          (: check type :)
          //Name
          [not(parent::ImportDeclaration)]
          [some $class in $fullName satisfies pmd-java:typeIsExactly($class)]
          |
          //ClassOrInterfaceType
          [some $class in $fullName satisfies pmd-java:typeIsExactly($class)]
          |
          (: import + usage :)
          //Name
          [
              //ImportDeclaration/Name
              [some $class in $fullName satisfies starts-with(@Image, $class)]
          ]
          [some $class in $shortName satisfies starts-with(@Image, $class)]
          |
          (: FQN usage :)
          //Name
          [not(parent::ImportDeclaration)]
          [some $class in $fullName satisfies starts-with(@Image, $class)]
          |
          (: static import + usage :)
          //Name
          [not(parent::ImportDeclaration)]
          [
            (: bind the context node to a variable :)
            some $name in (.) satisfies
            //ImportDeclaration[@Static = true()]
              /Name
              [some $class in $fullName satisfies starts-with(@Image, $class)]
              [ends-with(@Image, $name/@Image)]
          ]
          ]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
      import org.apache.log4j.Logger;
      import java.nio.charset.Charset;
      import org.apache.commons.codec.CharEncoding;
      class Foo {
          private static Logger log = Logger.getLogger(Foo.class);
          Charset cs = Charset.forName(CharEncoding.UTF_8);
      }
      ]]>
    </example>
  </rule>

  <rule name="AvoidProhibitedMethodsUsage"
        since="0.1.0"
        language="java"
        message="The {0}#{1} invocation is prohibited to use."
        class="io.github.dgroup.arch4u.pmd.AvoidProhibitedMethodsUsage">
    <description>
      Avoid using the prohibited method(s).
      See the discussion about implementation tips/tricks on Github: https://github.com/dgroup/arch4u-pmd/discussions/40
    </description>
    <priority>3</priority>
    <properties>
      <property name="class" description="The fully qualified name of the class"
                value="java.lang.Object"/>
      <property name="methods" description="List of prohibited methods" value="toString"/>
      <property name="checkSubtypes" value="false"
                description="The property matches whether the subtypes should be checked"/>
    </properties>
    <example>
      <![CDATA[
      class Foo {
          void bar(Object obj) {
              String s = obj.toString();
          }
      }
      ]]>
    </example>
  </rule>

  <rule name="ObfuscationRequired"
        since="0.1.0"
        language="java"
        message="TBD"
        class="io.github.dgroup.arch4u.pmd.ObfuscationRequired">
    <description>
      TBD
    </description>
    <priority>3</priority>
    <properties>
      <property name="loggerClasses" delimiter="|" value="org.slf4j.Logger
|java.util.logging.Logger
|org.apache.log4j.Logger
|org.apache.logging.log4j.Logger"/>
      <property name="sensitiveClasses" value="io.github.dgroup.arch4u.pmd.test_entity.Person"/>
    </properties>
    <example>
      <![CDATA[
      import org.slf4j.Logger;
      import org.slf4j.LoggerFactory;
      import io.github.dgroup.arch4u.pmd.test_entity.Person;
      class Foo {
          Logger logger = LoggerFactory.getLogger(Foo.class);

          void bar(Person person) {
              logger.info("Processing started for customer {}", person);
          }
      }
      ]]>
    </example>
  </rule>

  <rule name="JUnitAssertionsShouldIncludeMessage"
        since="0.1.0"
        language="java"
        message="TBD"
        class="io.github.dgroup.arch4u.pmd.JUnitAssertionsShouldIncludeMessage">
    <description>
      JUnit assert methods should contain a message, but not assertEquals
    </description>
    <priority>3</priority>
    <properties>
      <property name="methods" delimiter="|"
  value="assertArrayEquals-2|assertFalse-1|assertNotNull-1|assertNotSame-2|
  assertNull-1|assertSame-2|assertThat-2|assertTrue-1|fail-0"/>
      <property name="packages" delimiter="|" value="junit.framework|org.junit"/>
    </properties>
    <example>
      <![CDATA[
      import junit.framework.TestCase;

      public class Foo extends TestCase {
          public void test1() {
              assertArrayEquals("[1] != [1]", new int[] {1}, new int[] {1});
          }
      }
      ]]>
    </example>
  </rule>

</ruleset>
